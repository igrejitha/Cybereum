@model Cybereum.Models.tbl_user

@{
    ViewBag.Title = "Edit User";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.userid)
        @Html.HiddenFor(model => model.emailverification)
        @Html.HiddenFor(model => model.otp)
        @Html.HiddenFor(model => model.createddate)
        @Html.HiddenFor(model => model.activationcode)
        @Html.HiddenFor(model => model.isactive)

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.emailid, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.emailid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.emailid, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.roleid, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("roleid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.roleid, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.password, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", placeholder = "Password", @type = "Password" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group col-md-6">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>*@
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.firstname,"FirstName", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.lastname, "LastName", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.organization, "Organization", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.organization, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.organization, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btnConfirm btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
