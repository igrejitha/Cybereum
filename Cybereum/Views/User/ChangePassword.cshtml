@using Cybereum.Models
@model ChangePwdViewModel
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<<<<<<< Updated upstream
<<<<<<< Updated upstream

<div class="row no-gutters">
    <div class="col-xl-12">
        <div class="auth-form">            
            <h3 class="text-center mb-4">Change Password</h3>
            <span class="text-danger" style="align-items:center;">
                @ViewBag.Message
            </span>

            @using (Html.BeginForm("ChangePassword", "User", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.Hidden("email", (object)ViewBag.email)
                @Html.Hidden("userid", (object)ViewBag.userid)

                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <label class="mb-1"><strong>Old Password</strong></label>
                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    <label class="mb-1"><strong>New Password</strong></label>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    <label class="mb-1"><strong>Confirm Password</strong></label>

                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })

                </div>                
                <div class="text-center">
                    <button type="submit" class="btn btn btn-block" href="" style="background-color: #0D2136; color: white;">Update password</button>
                </div>                
            }
        </div>
    </div>
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
=======
=======
>>>>>>> Stashed changes
<div class="main-content">

    <div class="page-content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-xl-12 col-lg-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="basic-form">
                                <h3 class="text-center mb-4">Change Password</h3>
                                <span class="text-danger" style="align-items:center;">
                                    @ViewBag.Message
                                </span>

                                @using (Html.BeginForm("ChangePassword", "User", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                                    @Html.Hidden("email", (object)ViewBag.email)
                                    @Html.Hidden("userid", (object)ViewBag.userid)

                                    @Html.AntiForgeryToken()
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        <label class="mb-1"><strong>Old Password</strong></label>
                                        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-group">
                                        <label class="mb-1"><strong>New Password</strong></label>
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="form-group">
                                        <label class="mb-1"><strong>Confirm Password</strong></label>

                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn btn-block" href="" style="background-color: #0D2136; color: white;">Update password</button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
