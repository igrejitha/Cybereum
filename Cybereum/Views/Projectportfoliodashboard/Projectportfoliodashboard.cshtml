@model List<SelectListItem>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-content">

    <div class="page-content">
        <div class="container-fluid">

            <!-- start page title -->
            <div class="row">
                <div class="col-12">
                    <div class="page-title-box d-flex align-items-center justify-content-between">
                        <h4 class="mb-0 font-size-18">Project Portfolio Dashboard</h4>

                        <div class="page-title-right">
                            <ol class="breadcrumb m-0">
                                <li class="breadcrumb-item"><a href="javascript: void(0);">Cybereum</a></li>
                                <li class="breadcrumb-item active">Project Portfolio Dashboard</li>
                            </ol>
                        </div>

                    </div>
                </div>
            </div>
            <!-- end page title -->
            <div class="row">                
                <div class="col-md-12 mt-3 mb-0">
                    <div class="card mb-0">
                        <div class="card-body">
                            <h4 class="header-title mb-4">Portfolio Metrics</h4>
                            <div class="row">
                                <div class="col-6">
                                    <h5 class="font-size-12">Project Completion Status by Phase</h5>
                                    <div id="donut_chart" class="apex-charts" dir="ltr"></div>

                                </div>
                                <div class="col-6">
                                    <h5 class="font-size-12">Project Risk Levels</h5>
                                    <div id="bar_chart" class="apex-charts" dir="ltr"></div>


                                </div>
                                <div class="col-6 mt-2">
                                    <h5 class="font-size-12">Project Completion Status</h5>
                                    <div id="pie_chart" class="apex-charts" dir="ltr"></div>


                                </div>
                                <div class="col-6 mt-2">
                                    <h5 class="font-size-12">
                                        Project Status Counts
                                    </h5>
                                    <div id="bar_chart1" class="apex-charts" dir="ltr"></div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 mt-3">
                    @if (Convert.ToInt32(Session["RoleId"]) == 2 || Convert.ToInt32(Session["RoleId"]) == 4 || Convert.ToInt32(Session["RoleId"]) == 5)
                    {
                        <button type="button" class="btn btn-outline-primary btn-lg waves-effect waves-light" onclick="location.href='@Url.Action("AddEditProject", "Project")'">
                            <i class="mdi mdi-shape-square-plus"></i> Create New Project
                        </button>
                    }

                </div>
                <div class="col-12 mt-3">
                    <form class="app-search d-none d-lg-block p-0">
                        <div class="d-flex">
                            <div class="position-relative w-75 mr-3">
                                <input style=" height 49.5px;" type="search"
                                       class="form-control bg-lite rounded-lg" placeholder="Search for projects..."
                                       id="example-search-input">
                                <span class="mdi mdi-magnify"></span>
                            </div>
                            <div class="mt-1"> <a id="btnSearch" class='superBtn search1-btn'>Search</a></div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">

                            <div class="table-responsive">
                                <table id="tblProject" class="table table-hover mb-0">
                                    <thead>
                                        <tr>
                                            <th>Project Name</th>
                                            <th>Project Manager</th>
                                            <th>Start Date</th>
                                            <th>End Date</th>
                                            <th>Project Status</th>
                                            <th>Completion Status</th>
                                            <th style="width: 180px;">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                </div>


            </div>

            <div class="row">
                <div class="col-xl-6">
                    <div class="card" style="padding-bottom: 104px;">
                        <div class="card-body">
                            <h4 class="header-title mb-4">Team Member Allocation</h4>

                            <canvas id="myChart"></canvas>

                        </div>
                    </div>
                </div> <!-- end col -->

                <div class="col-lg-6">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="header-title mb-4">Team Member Allocation</h4>

                            <div id="column_chart" class="apex-charts" dir="ltr"></div>
                        </div>
                    </div><!--end card-->
                </div>
            </div>

        </div> <!-- container-fluid -->
    </div>
    <!-- End Page-content -->
</div>
@Scripts.Render("~/bundles/jquery")
<style>
    .expand-column {
        max-width: 70px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .dataTables_filter, .dataTables_info { display: none; }

</style>

<script type="text/javascript">
    $(document).ajaxSend(function () {
        //$("#overlay").fadeIn(300);
    });

    $(document).ready(function () {
        $('#liUsers').addClass("active");

        //var reset = 0;
        @*var value = '@Request.RequestContext.HttpContext.Session["LoggedInUserId"]';
        var value1 = '@Request.RequestContext.HttpContext.Session["RoleId"]';
        var objFilter = {
            userid: value,
            roleid: value1
        }*@
        var value1 = $('#example-search-input').val();
        var objFilter = {
            organization: value1
        }
        debugger;
        $("#tblProject").DataTable(
        {
            processing: true,
            serverSide: true,
            filter: false,
            orderMulti: false,
            paging: true,
            "bFilter": true ,
            pageLength: 5,
            //Sort: true,
            "ajax": {
            url: '@Url.Action("projectlist", "Project")',
            type: 'POST',
            data: objFilter
            },
        aLengthMenu: [[5,75, 100, 500, 1000, -1], [5,75, 100, 500, 1000, "All"]],
        iDisplayLength: 5,
        aoColumnDefs: [{
            bSortable: false,
            aTargets: [-1, -2]
        }],
        "bAutoWidth": false,
        "info": true,
        columns: [
            { 'data': 'projectname', 'name': 'Project Name' },
            { 'data': 'createdusername', 'name': 'Project Manager' },
            {
                'data': 'startdate', 'name': 'Start Date',
                'render': function (jsonDate) {
                    if (jsonDate != null) {
                        var date = new Date(parseInt(jsonDate.substr(6)));
                        var month = ("0" + (date.getMonth() + 1)).slice(-2);
                        return month + '-' + ("0" + date.getDate()).slice(-2) + '-' + date.getFullYear();
                    }
                    else {
                        return "";
                    }
                }
            },
            {
                'data': 'enddate', 'name': 'End Date',
                'render': function (jsonDate) {
                    if (jsonDate != null) {
                        var date = new Date(parseInt(jsonDate.substr(6)));
                        var month = ("0" + (date.getMonth() + 1)).slice(-2);
                        return month + '-' + ("0" + date.getDate()).slice(-2) + '-' + date.getFullYear();
                    }
                    else {
                        return "";
                    }
                }
            },
            { 'data': 'projectstatus', 'name': 'Project Status' },
            {
                data: 'projectname', render: function (data, type,full, row) {
                    return '<div class="progress"><div class="progress-bar progress-bar-table" role="progressbar" style="width: "' + full.progress + '"%;" aria-valuenow="' + full.progress + '" aria-valuemin="0" aria-valuemax="100">' + full.progress + '%</div></div>';
                }
            },
            {
                "render": function (data, type, full, meta) {
                    debugger;
                    var value1 = '@Request.RequestContext.HttpContext.Session["RoleId"]';
                    var value2 = '@Request.RequestContext.HttpContext.Session["LoggedInUserId"]';
                    if (value1 == '2' || value1 == '4' || value1 == '3' || value1 == '5') {
                        if (value2 == full.createdby || value1 == 4 || value1 == 5) {
                            return '<a style="padding-right:3px;"> <button type="button" class="btn btn-outline-primary btn-sm waves-effect waves-light" onclick=getProject("' + full.projectid + '")>Edit</button></a>' +
                            '<a style="padding-right:3px;"><button type="button" class="btn btn-outline-secondary btn-sm waves-effect waves-light" onclick=OpenProject("' + full.projectid + '","0")>Open</button></a>' +
                            '<button type="button" class="btn btn-outline-danger btn-sm waves-effect waves-light" onclick=DeleteProject("' + full.projectid + '")>Delete</button>';
                        }
                        else {
                            return '<a style="padding-right:3px;"> <button type="button" class="btn btn-outline-primary btn-sm waves-effect waves-light" disabled="disabled" onclick=getProject("' + full.projectid + '")>Edit</button></a>' +
                            '<a style="padding-right:3px;"><button type="button" class="btn btn-outline-secondary btn-sm waves-effect waves-light" onclick=OpenProject("' + full.projectid + '","1")>Open</button></a>' +
                            '<button type="button" class="btn btn-outline-danger btn-sm waves-effect waves-light" disabled="disabled" onclick=DeleteProject("' + full.projectid + '")>Delete</button>';
                        }
                    }
                    else {
                        return '<a style="padding-right:3px;"> <button type="button" class="btn btn-outline-primary btn-sm waves-effect waves-light" disabled="disabled" onclick=getProject("' + full.projectid + '")>Edit</button></a>' +
                            '<a style="padding-right:3px;"><button type="button" class="btn btn-outline-secondary btn-sm waves-effect waves-light" onclick=OpenProject("' + full.projectid + '","1")>Open</button></a>' +
                            '<button type="button" class="btn btn-outline-danger btn-sm waves-effect waves-light" disabled="disabled" onclick=DeleteProject("' + full.projectid + '")>Delete</button>';
                    }
                }
            }
        ],
        select: {
            style: 'multi',
            selector: 'td:first-child'
        },
        });
    });

    function getProject(id) {
        location.href = '@Url.Action("AddEditrecord", "Project", new { id = "id" })'.replace('id', id);
    }

    function OpenProject(projectid, projectmember) {
        if (projectmember == 0) {
            location.href = '@Url.Action("masterdashboard", "Projectportfoliodashboard")?projectid=' + projectid + '';
        }
        else
        {
            location.href = '@Url.Action("GanttChart", "Project")?projectid=' + projectid + '';
        }
    }

    function DeleteProject(id) {
        if (confirm("Are you sure you want to delete this project?")) {
            debugger;
            $.ajax({
                url: '@Url.Action("DeleteProject", "Project")?id=' + id,
                type: "POST",
                data: 'id=' + id ,
                success: function (response) {
                    debugger;
                    alert("Project deleted successfully", "info");
                    window.location.reload();
                }
            });
        }
        return false;
    }


    $("#btnSearch").click(function () {
        debugger;
        var search = $('#example-search-input').val();
        $("#tblProject").DataTable().search(search).draw();
    });



    function msg(strMsg, mode) {
        $.notify(strMsg, mode, { globalPosition: 'top center', clickToHide: true, autoHide: false });
    }
</script>

