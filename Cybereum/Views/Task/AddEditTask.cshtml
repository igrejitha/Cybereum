@model Cybereum.Models.ProjectTask

@{
    ViewBag.Title = "Add/Edit Task";
}

<style type="text/css">
    .error {
        color: red;
        display: none;
    }
</style>

<div class="row">
    <div class="col-xl-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Add/Edit Task</h4>
            </div>
            <div class="card-body">
                <div class="basic-form">
                    @using (Html.BeginForm("AddEditTask", "Task", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        @*<div class="form-horizontal">
                            <hr />*@
                            <span class="text-danger" style="align-items:center;">
                                @ViewBag.Message
                                @Html.HiddenFor(model => model.taskid)
                                @Html.HiddenFor(model => model.activityid)
                                @Html.HiddenFor(model => model.activityname)
                                @Html.HiddenFor(model => model.createdby)
                                @Html.HiddenFor(model => model.createdon)                                
                            </span>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.taskname, "Task Name", htmlAttributes: new { @class = "" })
                                    @*<div class="col-md-10">*@
                                        @Html.EditorFor(model => model.taskname, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.taskname, "", new { @class = "text-danger" })
                                    @*</div>*@
                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.startdate, "Start Date", htmlAttributes: new { @class = "" })
                                    @*<div class="col-md-10">*@
                                        @*@Html.EditorFor(model => model.startdate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })*@
                                        @*@Html.TextBoxFor(model => model.startdate, "{0:MM/dd/yyyy}", new { @class = "form-control mb-2 mr-sm-2 datepicker", @type = "date", @placeholder = "MM/dd/yyyy", autocomplete = "off" })*@
                                        @Html.TextBoxFor(model => model.startdate, new { @type = "date", @class = "form-control datepicker", @Value = Model.startdate.ToString("yyyy-MM-dd") })
                                        @Html.ValidationMessageFor(model => model.startdate, "", new { @class = "text-danger" })
                                    @*</div>*@
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.enddate, "End Date", htmlAttributes: new { @class = "" })
                                    @*<div class="col-md-10">*@
                                        @*@Html.EditorFor(model => model.enddate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })*@
                                        @Html.TextBoxFor(model => model.enddate, new { @type = "date", @class = "form-control datepicker", @Value = Model.enddate.ToString("yyyy-MM-dd") })
                                        @Html.ValidationMessageFor(model => model.enddate, "", new { @class = "text-danger" })
                                    @*</div>*@
                                </div>
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.taskstatus, htmlAttributes: new { @class = "" })
                                    @*<div class="col-md-10">*@
                                        @Html.DropDownList("taskstatus", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.taskstatus, "", new { @class = "text-danger" })
                                    @*</div>*@
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.tasktype, htmlAttributes: new { @class = "" })
                                    @*<div class="col-md-10">*@
                                        @Html.DropDownList("tasktype", null, htmlAttributes: new { @class = "form-control", @id = "ddltasktype" })
                                        @Html.ValidationMessageFor(model => model.tasktype, "", new { @class = "text-danger" })
                                    <input type="hidden" id="tasktype" name="tasktype" />
                                    @*</div>*@
                                </div>                                
                                <div class="form-group col-md-6">
                                    @Html.LabelFor(model => model.assignedto, "Assigned To", htmlAttributes: new { @class = "" })
                                    @*<div class="col-md-10">*@
                                    @Html.DropDownList("assignedto", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.assignedto, "", new { @class = "text-danger" })
                                    @*</div>*@
                                </div>
                            </div>                            
                        <div class="row" style="padding-top: 30px;">
                            <div class="col-6">                                
                                <h4>
                                    @Html.ActionLink("Back to List", "List", new
                               {
                                   // routeValues
                                   activityid = ViewBag.activityid
                               })
                                </h4>
                            </div>
                            <div class="col-6">
                                @*<button type="button" class="btn btn" style="background-color: #0D2136; color: white;" data-dismiss="modal" onclick="history.go(-1); return false;">Close</button>*@
                                <input type="submit" name="btnSubmit" value="Save" class="btn btn" style="background-color: #0D2136; color: white;" />
                            </div>

                        </div>
                        @*</div>*@
                    }
                    </div>
                </div>
            </div>
        </div>
    </div>

@Scripts.Render("~/bundles/jquery")
                    <script type="text/javascript">
                        $(document).ajaxSend(function () {
                            //$("#overlay").fadeIn(300);
                        });


                        $(document).ready(function () {
                            debugger;

                            $("#ddltasktype").on("change", function () {
                                $("#tasktype").val($(this).find("option:selected").text());
                            });

                            $(function () {
                                //$("#startdate").datepicker();
                                $("#startdate").on('change', function () {
                                    debugger;
                                    var startdate = $("#startdate").val();
                                    var date = $("#enddate").val();
                                    if (date != "") {
                                        if (date < startdate) {
                                            alert('End date must be greater than Start date');
                                            $(this).val('');
                                        }
                                    }
                                });
                            });

                            $(function () {
                                //$("#enddate").datepicker();
                                $("#enddate").on('change', function () {
                                    debugger;
                                    var date = $("#enddate").val();
                                    var startdate = $("#startdate").val();
                                    if (date != "") {
                                        if (date < startdate) {
                                            alert('End date must be greater than Start date');
                                            $(this).val('');
                                        }
                                    }
                                });
                            });

                            $('#checkBoxAll').click(function () {
                                if ($(this).is(":checked")) {
                                    $(".chkCheckBoxId").prop("checked", true)
                                }
                                else {
                                    $(".chkCheckBoxId").prop("checked", false)
                                }
                            });

                        });
                    </script>
