@model List<SelectListItem>

@{
    ViewBag.Title = "SubTask List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #button {
        display: block;
        margin: 20px auto;
        padding: 10px 30px;
        background-color: #eee;
        border: solid #ccc 1px;
        cursor: pointer;
    }

    #overlay {
        position: fixed;
        top: 0;
        z-index: 100;
        width: 100%;
        height: 100%;
        display: none;
        background: rgba(0,0,0,0.6);
    }

    .cv-spinner {
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .spinner {
        width: 40px;
        height: 40px;
        border: 4px #ddd solid;
        border-top: 4px #2e93e6 solid;
        border-radius: 50%;
        animation: sp-anime 0.8s infinite linear;
    }

    @@keyframes sp-anime {
        100% {
            transform: rotate(360deg);
        }
    }

    .is-hide {
        display: none;
    }
</style>
<div class="main-content">

    <div class="page-content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <h4>SubTask List</h4>
                <hr />
            </div>


            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="tblSubTask" class="table table-hover mb-0">
                                <thead>
                                    <tr>
                                        <th>SubTask Name</th>
                                        <th>Task Name</th>
                                        <th>Activity Name</th>
                                        <th>Project Name</th>
                                        <th>Start Date</th>
                                        <th>End Date</th>
                                        <th>Assigned To</th>
                                        <th>Progress %</th>
                                        <th>Edit</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")
<script type="text/javascript">
    $(document).ajaxSend(function () {
        //$("#overlay").fadeIn(300);
    });

    $(document).ready(function () {
        $('#liUsers').addClass("active");

        debugger;
        //var reset = 0;
        var value = '@Request.RequestContext.HttpContext.Session["LoggedInUserId"]';
        var value1 = '@Request.RequestContext.HttpContext.Session["RoleId"]';
        var value2 = '@ViewBag.taskid';
        var objFilter = {
            userid: value,
            roleid: value1,
            taskid: value2
        }

        $("#tblSubTask").DataTable(
        {
            processing: true,
            serverSide: true,
            filter: false,
            orderMulti: false,
            paging: false,
            Sort: true,
            "ajax": {
                url: '@Url.Action("subtasklist", "SubTask")',
                type: 'POST',
                data: objFilter
            },
            aoColumnDefs: [{
                bSortable: false,
                aTargets: [-1, -2]
            }],
            "bAutoWidth": false,
            "info": true,
            columns: [
                { 'data': 'subtaskname', 'name': 'SubTask Name' },
                { 'data': 'taskname', 'name': 'Task Name' },
                { 'data': 'activityname', 'name': 'Activity Name' },
                { 'data': 'projectname', 'name': 'Project Name' },
                {
                    'data': 'startdate', 'name': 'Start Date',
                    'render': function (jsonDate) {
                        debugger;
                        if (jsonDate != null) {
                            var date = new Date(parseInt(jsonDate.substr(6)));
                            var month = ("0" + (date.getMonth() + 1)).slice(-2);
                            return month + '-' + ("0" + date.getDate()).slice(-2) + '-' + date.getFullYear();
                        }
                        else {
                            return "";
                        }
                    }
                },
                {
                    'data': 'enddate', 'name': 'End Date',
                    'render': function (jsonDate) {
                        debugger;
                        if (jsonDate != null) {
                            var date = new Date(parseInt(jsonDate.substr(6)));
                            var month = ("0" + (date.getMonth() + 1)).slice(-2);
                            return month + '-' + ("0" + date.getDate()).slice(-2) + '-' + date.getFullYear();
                        }
                        else {
                            return "";
                        }
                    }
                },
                { 'data': 'assignedusername', 'name': 'Assigned To' },
                { 'data': 'progress', 'name': 'Progress %' },
                {
                    "render": function (data, type, full, meta) {
                        //return '<button class="btn btn" style="background-color: #0D2136; color: white;" onclick=getSubTask("' + full.subtaskid + '"); >Edit</button>';
                        var value1 = '@Request.RequestContext.HttpContext.Session["RoleId"]';
                        if (value1 == '1') {
                            return '<a><button class="btn btn-outline-primary btn-sm waves-effect waves-light" disabled="disabled" onclick=getSubTask("' + full.subtaskid + '"); >Edit</button></a>';
                        }
                        else {
                            if (full.taskstatus == 2) {
                                return '<a><button class="btn btn-outline-primary btn-sm waves-effect waves-light" disabled="disabled" onclick=getSubTask("' + full.subtaskid + '"); >Edit</button></a>';
                            }
                            else {
                                return '<a><button class="btn btn-outline-primary btn-sm waves-effect waves-light" onclick=getSubTask("' + full.subtaskid + '"); >Edit</button></a>';
                            }
                        }
                    }
                }
            ],
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
        });
    });


    function OnSuccess(response) {
        $("#tblSubTask").dataTable(
        {
            bLengthChange: true,
            bFilter: false,
            bSort: true,
            bPaginate: true,
            data: response,
            bresponsive: true,
            scrollX: false,
            aoColumnDefs: [{
                bSortable: false,
                aTargets: [-1, -2]
            }],
            columns: [
                { 'data': 'subtaskname', 'name': 'SubTask Name' },
                { 'data': 'taskname', 'name': 'Task Name' },
                { 'data': 'startdate', 'name': 'Start Date' },
                { 'data': 'enddate', 'name': 'End Date' },
                { 'data': 'assignedusername', 'name': 'Assigned To' },
                {
                    "render": function (data, type, full, meta) {
                        //return '<button class="btn btn" style="background-color: #0D2136; color: white;" onclick=getSubTask("' + full.subtaskid + '"); >Edit</button>';
                        var value1 = '@Request.RequestContext.HttpContext.Session["RoleId"]';
                        if (value1 == '1') {
                            return '<button class="btn btn" style="background-color: #0D2136; color: white;" disabled="disabled" onclick=getSubTask("' + full.subtaskid + '"); >Edit</button>';
                        }
                        else {
                            return '<button class="btn btn" style="background-color: #0D2136; color: white;" onclick=getSubTask("' + full.subtaskid + '"); >Edit</button>';
                        }
                    }
                }
            ],
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
        });
    };

    function getSubTask(id) {
        debugger;
        var projectid = "@ViewBag.projectid";
        var activityid = "@ViewBag.activityid";
        location.href = '@Url.Action("AddEditrecord", "SubTask", new { id = "id", activityid = "task", projectid = "value" })'.replace('id', id).replace('task', activityid).replace('value', projectid);
    }


    function EditData(subtaskid) {
        debugger;
        $.ajax(
        {
            url: '@Url.Action("AddEditSubTask", "SubTask")?subtaskid=' + subtaskid,
            contentType: 'application/json; charset=utf-8',
            datatype: 'json',
            async: true,
            data: {
                datsubtaskid: subtaskid
            },
            type: "GET",
            success: function (response) {
                $("#overlay").fadeOut(300);
                debugger;
                if (response == "Success")
                    @*window.location = '@Url.Action("Users", "User")?userid=' + userid;
                else
                    msg(response, 'info');*@
                    msg("Record edited successfully", "info");
                window.location.reload();
            }
        });
    }

    function DeleteData(id) {
        if (confirm("Are you sure you want to delete this record?")) {
            $.ajax({
                url: '@Url.Action("DeleteTask", "Task")?id=' + id,
                type: "GET",
                dataType: "JSON",
                data: {
                    datmilestoneid: milestoneid
                },
                success: function (response) {
                    msg("Record deleted successfully", "info");
                    window.location.reload();
                }
            });
        }
        return false;
    }

    function msg(strMsg, mode) {
        $.notify(strMsg, mode, { globalPosition: 'top center', clickToHide: true, autoHide: false });
    }
</script>
