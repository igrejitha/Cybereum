@model Cybereum.Models.MilestoneViewModel

@{
    ViewBag.Title = "Add/Edit Milestone";
}

<script src="~/Scripts/jquery-2.1.1.min.js"></script>

<link rel="stylesheet" href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<style type="text/css">
    .error {
        color: red;
        display: none;
    }
</style>

<h2>Add/Edit Milestone</h2>

@using (Html.BeginForm("Create", "Milestone", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <span class="text-danger" style="align-items:center;">
            @ViewBag.Message
            @Html.HiddenFor(model => model.milestoneid, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.projectid)
            @Html.HiddenFor(model => model.projectname)
            @Html.HiddenFor(model => model.createdby)
            @Html.HiddenFor(model => model.createddate)
            @Html.HiddenFor(model => model.modifiedby)
            @Html.HiddenFor(model => model.modifieddate)
            @Html.HiddenFor(model => model.isactive)
        </span>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.milestonename, "MilestoneName", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.milestonename, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.milestonename, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.startdate, "StartDate", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.startdate, new { @type = "date", @class = "form-control datepicker", @Value = Model.startdate.ToString("yyyy-MM-dd") })
                    @Html.ValidationMessageFor(model => model.startdate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.enddate, "EndDate", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.enddate, new { @type = "date", @class = "form-control datepicker", @Value = Model.enddate.ToString("yyyy-MM-dd") })
                    @Html.ValidationMessageFor(model => model.enddate, "", new { @class = "text-danger" })
                </div>
            </div>            
        </div>                
        <div class="modal-footer">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <button type="button" class="btn btn-default" data-dismiss="modal" onclick="history.go(-1); return false;">Close</button>
                    <input type="submit" name="btnSubmit" value="Save" class="btnConfirm btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new
{
    // routeValues
    projectid = ViewBag.projectid
})
</div>

<script type="text/javascript">
    $(document).ajaxSend(function () {
        //$("#overlay").fadeIn(300);
    });


    $(document).ready(function () {
        debugger;

        $(function () {
            //$("#startdate").datepicker();
            $("#startdate").on('change', function () {
                debugger;
                var startdate = $("#startdate").val();
                var date = $("#enddate").val();
                if (date != "") {
                    if (date < startdate) {
                        alert('End date must be greater than Start date');
                        $(this).val('');
                    }
                }
            });
        });


        $(function () {            
            $("#enddate").on('change', function () {
                debugger;
                var date = $("#enddate").val();
                var startdate = $("#startdate").val();
                if (date != "") {
                    if (date < startdate) {
                        alert('End date must be greater than Start date');
                        $(this).val('');
                    }
                }
            });
        });

        $('#checkBoxAll').click(function () {
            if ($(this).is(":checked")) {
                $(".chkCheckBoxId").prop("checked", true)
            }
            else {
                $(".chkCheckBoxId").prop("checked", false)
            }
        });       

        function onSubmit() {

        }

        // register event on form, not submit button
        $('#subscribeForm').submit(onSubmit)



    });
</script>
