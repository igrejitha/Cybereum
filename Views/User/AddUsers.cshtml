@model Cybereum.Models.tbl_user

@{
    ViewBag.Title = "Add/Edit Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery-2.1.1.min.js"></script>

<link rel="stylesheet" href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<style type="text/css">
    .error {
        color: red;
        display: none;
    }
</style>

<h2>Add/Edit Users</h2>

@using (Html.BeginForm("AddUsers", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">        
        <hr />
        <span class="text-danger" style="align-items:center;">
            @ViewBag.Message
            @Html.HiddenFor(model => model.userid, htmlAttributes: new { @class = "control-label col-md-2" })            
            @Html.HiddenFor(model => model.emailverification)
            @Html.HiddenFor(model => model.otp)
            @Html.HiddenFor(model => model.createddate)
            @Html.HiddenFor(model => model.activationcode)
            @Html.HiddenFor(model => model.isactive)
            @Html.HiddenFor(model => model.roleid)
            @Html.HiddenFor(model => model.pmuserid)
        </span>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.emailid, "E-mail ID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.emailid, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.emailid, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.password, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", autocomplete = "off",placeholder = "Password", @type = "Password" } })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.firstname, "FirstName", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.firstname, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.lastname, "LastName", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-row">
            @*<div class="form-group col-md-6">
                @Html.LabelFor(model => model.roleid, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("roleid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.roleid, "", new { @class = "text-danger" })
                </div>
            </div>*@            
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.organization, "Organization", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.organization, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.organization, "", new { @class = "text-danger" })
                </div>
            </div>            
        </div>        
        <div class="modal-footer">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <button type="button" class="btn btn-default" data-dismiss="modal" onclick="history.go(-1); return false;">Close</button>
                    <input type="submit" name="btnSubmit" value="Save" class="btnConfirm btn btn-primary" />                    
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    $(document).ajaxSend(function () {
        //$("#overlay").fadeIn(300);
    });


    $(document).ready(function () {
        debugger;
        //FillLevelOne();       

        $("#btnSubmit").click(function () {
            return true;
        });

        function onSubmit() {
            
        }

        // register event on form, not submit button
        $('#subscribeForm').submit(onSubmit)
      


    });
</script>
